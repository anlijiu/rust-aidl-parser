---
source: tests/test.rs
expression: "res[0].file.as_ref().unwrap()"

---
File(
  package: Package(
    name: "com.bwa.aidl_test",
    symbol_range: "...",
  ),
  imports: [
    Import(
      path: "com.bwa.aidl_test",
      name: "MyEnum",
      symbol_range: "...",
    ),
    Import(
      path: "com.bwa.aidl_test",
      name: "MyParcelable",
      symbol_range: "...",
    ),
  ],
  item: Interface(Interface(
    name: "MyInterface",
    elements: [
      Const(Const(
        name: "MY_CONST",
        const_type: Type(
          name: "int",
          kind: Primitive,
          generic_types: [],
          definition: None,
          symbol_range: "...",
        ),
        value: "12",
        annotations: [],
        doc: None,
        symbol_range: "...",
        full_range: "...",
      )),
      Method(Method(
        oneway: false,
        name: "hello",
        return_type: Type(
          name: "String",
          kind: String,
          generic_types: [],
          definition: None,
          symbol_range: "...",
        ),
        args: [
          Arg(
            direction: Unspecified,
            name: Some("e"),
            arg_type: Type(
              name: "MyEnum",
              kind: Custom,
              generic_types: [],
              definition: Some("com.bwa.aidl_test.MyEnum"),
              symbol_range: "...",
            ),
            doc: None,
            annotations: [],
          ),
          Arg(
            direction: Unspecified,
            name: None,
            arg_type: Type(
              name: "MyParcelable",
              kind: Custom,
              generic_types: [],
              definition: Some("com.bwa.aidl_test.MyParcelable"),
              symbol_range: "...",
            ),
            doc: None,
            annotations: [],
          ),
        ],
        annotations: [],
        doc: Some("Be polite and say hello"),
        symbol_range: "...",
        full_range: "...",
      )),
    ],
    annotations: [],
    doc: None,
    full_range: "...",
    symbol_range: "...",
  )),
)
